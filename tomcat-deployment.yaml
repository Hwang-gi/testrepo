apiVersion: apps/v1
kind: Deployment
metadata:
  name: 1st-was
  labels:
# nginx-main deployment와 같은 key 사용 (label's value만 다르게 설정)
    app: was-app
spec:
  replicas: 3
  selector:
    matchLabels:
      app: was-app
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
      maxSurge: 1
  template:
    metadata:
      labels:
        app: was-app
    spec:
      containers:
        - image: jinwoo0824/tomcat:v1.4
          name: was
          ports:
            - containerPort: 8080
          livenessProbe:
            httpGet:
              path: /
              port: 8080
            initialDelaySeconds: 5
            periodSeconds: 5
          readinessProbe:
            httpGet:
              path: /
              port: 8080
            initialDelaySeconds: 5
            periodSeconds: 10

# web service에 필요한 file들 (modal.html, 각 jsp file, ...)을 tomcat server에 모두 저장
# 많은 부하가 쏠리므로 최대 resource usage을 높게 설정

          resources:
            limits:
              memory: 350Mi
              cpu: 350m
          volumeMounts:
            - name: pv-was
              mountPath: /1st-was
      volumes:
        - name: pv-was
          persistentVolumeClaim:
            claimName: pvcwas
      nodeSelector:
        app: was-app

---

apiVersion: v1
kind: Service
metadata:
  name: was-svc
spec:
  selector:
    app: was-app
  type: ClusterIP
  clusterIP: 10.100.100.103
  ports:
    - protocol: TCP
      port: 8080
      targetPort: 8080
